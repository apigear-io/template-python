# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Technology Template Publish

on: 
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Is this a test run? No artifacts will be published'
        required: true
        default: 'true'
      lernaVersionIncrement:
        description: 'Set the semver keyword or explicit version for the templates packages(e.g. --minor, --patch, --prerelease). Empty will create a version based on the commit log.'
        required: false
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GITHUB_AUTH_TOKEN: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
      GCP_AUTH_TOKEN: ${{ secrets.GCP_GITHUB_CICD_TECH_TEMPLATE_ACCOUNT_TOKEN }}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Configure Git User
        run: |
          git config --global user.email "ci@apigear.io"
          git config --global user.name "@$GITHUB_ACTOR"
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
          submodules: recursive
        # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --prune --unshallow --tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # see https://classic.yarnpkg.com/en/docs/cli/install
      - run: yarn install --frozen-lockfile --link-duplicates
      - run: yarn run test:goldenmaster
      - name: Version package
        run: |
          npm run version -- ${{ github.event.inputs.lernaVersionIncrement }}
      - name: Test registry login
        if: ${{ github.event.inputs.dryRun != 'true' }}
        run: |
          npm whoami --registry=https://europe-west3-npm.pkg.dev/apigear/technology-templates/
      - name: Publish git changes to repository
        if: ${{ github.event.inputs.dryRun != 'true' }}
        run: |
          git push && git push --tags
      - name: Publish package
        if: ${{ github.event.inputs.dryRun != 'true' }}
        run: |
         npm publish --access restricted --@apigear-io-templates:registry=https://europe-west3-npm.pkg.dev/apigear/technology-templates/
      - name: Publish package dry-run
        if: ${{ github.event.inputs.dryRun == 'true' }}
        run: |
         npm publish --dry-run --access restricted --@apigear-io-templates:registry=https://europe-west3-npm.pkg.dev/apigear/technology-templates/
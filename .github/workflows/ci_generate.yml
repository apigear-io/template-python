# This workflow will ensure that the goldenmaster is always up-to-date before being merged

name: Technology Template Goldenmaster Test

on:
  pull_request:
    branches: [main]

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      GITHUB_AUTH_TOKEN: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
      GCP_AUTH_TOKEN: ${{ secrets.GCP_GITHUB_CICD_TECH_TEMPLATE_ACCOUNT_TOKEN }}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # see https://classic.yarnpkg.com/en/docs/cli/install
      - run: yarn install --frozen-lockfile --link-duplicates
      - run: yarn run test:goldenmaster

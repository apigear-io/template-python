# This workflow will ensure that the generated features work independently

name: Technology Template Features Test

on:
  pull_request:
    branches: [main]

env:
  GITHUB_AUTH_TOKEN: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
  GOPRIVATE: "github.com/apigear-io/*"
  GH_ACCESS_TOKEN: ${{ secrets.APIGEAR_REPOS }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  go_version: "1.21.x"

jobs:
  run_tests:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Simple", short: "simple", features: "scaffold" }
          - { name: "OLink", short: "olink", features: "olink" }
          - { name: "MQTT", short: "mqtt", features: "mqtt" }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: actions/setup-go@v3
        with:
          go-version: ${{env.go_version}}
      - uses: arduino/setup-task@v1
      - uses: actions/checkout@v4
      - run: task install
      - name: generate ${{ matrix.config.short }} feature set
        run: apigear g x -f "${{ matrix.config.features }}" -t . -o test -i apigear/test-apis/testbed.simple.module.yaml,apigear/test-apis/testbed.struct.module.yaml     
      - run: task py:install_generated
      - name: Start Mosquitto
        if: ${{ matrix.config.short == 'mqtt'}}
        uses: namoshek/mosquitto-github-action@v1
        with:
          version: '1.6'
          ports: '1883:1883'
          container-name: 'mqtt'
      - run: task py:test_generated
